generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model lab_result {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  patient_id        String?  @db.Uuid
  lab_technician_id String?  @db.Uuid
  result            String   @db.VarChar(255)
  created_at        DateTime @default(now()) @db.Timestamp(6)
  updated_at        DateTime @default(now()) @db.Timestamp(6)
  user              user?    @relation(fields: [lab_technician_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  patient           patient? @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model medical_record {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  patient_id   String?  @db.Uuid
  physician_id String?  @db.Uuid
  record       String   @db.VarChar(255)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  patient      patient? @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         user?    @relation(fields: [physician_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model patient {
  id                String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id           String?          @db.Uuid
  insurance_details String?          @db.VarChar(255)
  created_at        DateTime         @default(now()) @db.Timestamp(6)
  updated_at        DateTime         @default(now()) @db.Timestamp(6)
  lab_result        lab_result[]
  medical_record    medical_record[]
  user              user?            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  prescription      prescription[]
}

model prescription {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  patient_id   String?  @db.Uuid
  physician_id String?  @db.Uuid
  details      String   @db.VarChar(255)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  patient      patient? @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         user?    @relation(fields: [physician_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email          String           @unique @db.VarChar(255)
  firstName      String?          @db.VarChar(255)
  lastName       String?          @db.VarChar(255)
  roq_user_id    String           @db.VarChar(255)
  tenant_id      String           @db.VarChar(255)
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  lab_result     lab_result[]
  medical_record medical_record[]
  organization   organization[]
  patient        patient[]
  prescription   prescription[]
}
